- name: 'Check mandatory variables are defined'
  assert:
    that:
      - cert_manager_email is defined

- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: apps
    api_version: v1
    kind: Namespace
    state: present

- name: Add stable chart repo
  kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.url }}"
  with_items: 
    - {name: 'jetstack', url: 'https://charts.jetstack.io'}

- name: Deploy cert-manager
  kubernetes.core.helm:
    name: certmgr
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    update_repo_cache: true
    chart_version: 1.11.0
    wait: true
    values:
      installCRDs: true
      extraArgs: 
        - --dns01-recursive-nameservers-only
        - --dns01-recursive-nameservers=8.8.8.8:53

- name: Create prod cert issuer in the apps namespace
  kubernetes.core.k8s:
    state: present
    namespace: apps
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          # The ACME server URL
          server: https://acme-v02.api.letsencrypt.org/directory
          # Email address used for ACME registration
          email: "{{ cert_manager_email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: letsencrypt-prod
          # Enable the HTTP-01 challenge provider
          solvers:
          - http01:
              ingress:
                class: nginx

- name: Create staging cert issuer in the apps namespace
  kubernetes.core.k8s:
    state: present
    namespace: apps
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: letsencrypt-staging
      spec:
        acme:
          # The ACME server URL
          server: https://acme-staging-v02.api.letsencrypt.org/directory
          # Email address used for ACME registration
          email: "{{ cert_manager_email }}"
          # Name of a secret used to store the ACME account private key
          privateKeySecretRef:
            name: letsencrypt-staging
          # Enable the HTTP-01 challenge provider
          solvers:
          - http01:
              ingress:
                class:  nginx
          - dns01:
              acmeDNS:
                host: https://auth.acme-dns.io
                accountSecretRef:
                  name: acme-dns
                  key: acmedns.json
