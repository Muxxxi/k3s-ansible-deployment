- name: Add muxxxi chart repo
  kubernetes.core.helm_repository:
    name: muxxxi
    repo_url: "https://muxxxi.github.io/helm-charts"

- name: Create pvc for teamspeak
  kubernetes.core.k8s:
    state: present
    namespace: apps
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: teamspeak3-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: longhorn

- name: Install teamspeak
  register: ts
  kubernetes.core.helm:
    name: teamspeak3
    chart_ref: muxxxi/teamspeak3
    chart_version: 0.3.16
    release_namespace: apps
    update_repo_cache: true
    values:
      ts3ServerViewer:
        image:
          tag: v1.0.2
          pullPolicy: Always
        tsApiKey: "{{ ts3_api_key }}"
        tsApiUrl: "http://teamspeak3-tcp:10080/"
        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/issuer: "letsencrypt-prod"
#           nginx.ingress.kubernetes.io/rewrite-target: /$2
            nginx.ingress.kubernetes.io/configuration-snippet: |
              proxy_set_header SCRIPT_NAME /{{ ts3_viewer_path }};
              proxy_set_header X-Forwarded-Prefix /{{ ts3_viewer_path }};
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_set_header HOST $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_pass_request_headers on;
          hosts:
            - host: "ts.apps.{{ base_hostname }}"
              path: "/{{ ts3_viewer_path }}"
              pathType: Prefix
#             path: "/{{ ts3_viewer_path }}(/|$)(.*)"
#             pathType: ImplementationSpecific
          tls:
            - hosts:
                - "ts.apps.{{ base_hostname }}"
              secretName: ts-tls-cert
      service:
        ip: "{{ ansible_host }}"
        type: LoadBalancer
        annotations:
          metallb.universe.tf/allow-shared-ip: default-svc
      persistence:
        enabled: true
        existingClaim: teamspeak3-data
      ingress:
        enabled: false

- debug:
    msg: "{{ ts.stdout_lines }}"
